# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en|fr|es
    root_path: '%kernel.project_dir%'
    config_path: '%root_path%/mindsolutions/config/'
    lib_path: '%root_path%/mindsolutions/lib/'
    vendor_path: '%root_path%/public/vendor/'
    images_path: '%root_path%/public/images/'
    site_name: 'Mind Solutions'
    whop_redirect_uri: '%env(WHOP_REDIRECT_URI)%'
    whop_client_id: '%env(WHOP_CLIENT_ID)%'
    whop_client_secret: '%env(WHOP_CLIENT_SECRET)%'
    mind_solutions_pass_id: '%env(MIND_SOLUTIONS_PASS_ID)%'
    memcached_host: '%env(MEMCACHED_HOST)%'
    memcached_port: '%env(MEMCACHED_PORT)%'
    item_statuses:
        listed: 'Active'
        not_listed: 'Inactive'
        sold: 'Soldout'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false
        bind:   # defines the scalar arguments once and apply them to any service defined/created in this file
            string $locales: '%app_locales%'
            string $defaultLocale: '%locale%'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    GuzzleHttp\Client: ~
    App\Service\Whop:
        arguments:
            $apiKey: '%env(WHOP_API_KEY)%'
            $mindSolutionsPassId: '%env(MIND_SOLUTIONS_PASS_ID)%'

    App\EventSubscriber\PostLoginSubscriber:
        arguments:
            $whop: '@App\Service\Whop'
            $entityManager: '@Doctrine\ORM\EntityManagerInterface'
        tags:
            - { name: 'kernel.event_subscriber' }

    App\Service\Utils:
        arguments:
            $exchangeRateApiKey: '%env(EXCHANGE_RATE_API_KEY)%'
            $jwtKey: '%env(JWT_KEY)%'

    App\Service\Firestore:
        arguments:
            $projectId: '%env(FIREBASE_PROJECT_ID)%'
            $keyFilePath: '%env(FIREBASE_SERVICE_ACCOUNT_KEY)%'

    app.memcached:
        class: Memcached
        factory: ['Symfony\Component\Cache\Adapter\MemcachedAdapter', 'createConnection']
        arguments:
            - 'memcached://%memcached_host%:%memcached_port%'

    Symfony\Component\Cache\Adapter\MemcachedAdapter:
        arguments:
            - '@app.memcached'
            - ''
            - 0

    App\Repository\UserRepository:
        arguments:
            $projectDir: '%kernel.project_dir%'

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }